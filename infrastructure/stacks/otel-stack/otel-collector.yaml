apiVersion: v1
kind: Namespace
metadata:
  name: open-telemetry
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: open-telemetry
  namespace: open-telemetry
spec:
  interval: 24h
  url: https://open-telemetry.github.io/opentelemetry-helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: open-telemetry
  namespace: open-telemetry
spec:
  chart:
    spec:
      chart: opentelemetry-collector
      version: v0.78.x
      sourceRef:
        kind: HelmRepository
        name: open-telemetry
        namespace: open-telemetry
  interval: 12h
  timeout: 2m
  releaseName: opentelemetry-collector
  upgrade:
    remediation:
      retries: 10
  # https://github.com/open-telemetry/opentelemetry-helm-charts/blob/main/charts/opentelemetry-collector/values.yaml
  values:
    mode: deployment
    presets:
      kubernetesAttributes:
        enabled: true
    resources:
      requests:
        memory: 128Mi
      limits:
        memory: 300Mi
    config:
      receivers:
        otlp:
          protocols:
            http:
              cors:
                allowed_origins:
                  - "http://*"
                  - "https://*"
      exporters:
        otlp:
          endpoint: 'jaeger-collector:4317'
          tls:
            insecure: true
        # Create an exporter to Prometheus (metrics)
        otlphttp/prometheus:
          endpoint: 'http://kube-prometheus-stack-prometheus.monitoring:9090/api/v1/otlp'
          tls:
            insecure: true
      processors:
        resource:
          attributes:
          - key: service.instance.id
            from_attribute: k8s.pod.uid
            action: insert
        filter/ottl:
          error_mode: ignore
      connectors:
        spanmetrics:
      service:
        pipelines:
          traces:
            processors: [memory_limiter, resource, batch]
            exporters: [otlp, debug, spanmetrics]
          metrics:
            receivers: [otlp, spanmetrics]
            processors: [memory_limiter, filter/ottl, resource, batch]
            exporters: [otlphttp/prometheus, debug]