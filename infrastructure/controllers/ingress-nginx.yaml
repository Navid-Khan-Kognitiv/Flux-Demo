apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  interval: 24h
  url: https://kubernetes.github.io/ingress-nginx
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: "*"
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: ingress-nginx
      interval: 12h
  values:
    controller:
      name: controller
      image:
        tag: "v1.9.6"
      containerPort:
        http: 80
        https: 443
      config:
        server-tokens: "False"
        proxy-protocol: "True"
        real-ip-header: "proxy_protocol"
        set-real-ip-from: "10.0.0.0/8"
        X-Frame-Options: "DENY"
        Set-Cookie: "HttpOnly"
        X-XSS-Protection: "1"
        X-Content-Type-Options: "nosniff"
        proxy-buffer-size: "16k"
        use-http2: "False"
      ingressClass: nginx
      kind: Deployment
      replicaCount: 2
      minAvailable: 1
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nginx-ingress
              topologyKey: kubernetes.io/hostname
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
      autoscaling:
        enabled: ${enable_ingress_autoscaling:=false}
        minReplicas: 2
        maxReplicas: 4
        targetCPUUtilizationPercentage: 85
        targetMemoryUtilizationPercentage: 95
      service:
        enabled: true
        externalTrafficPolicy: "Local"
        loadBalancerIP: ${gcp_ingress_loadbalancerip}
        loadBalancerSourceRanges: ${gcp_ingress_source_range}
      metrics:
        enabled: true
        serviceMonitor:
          enabled: ${metrics_servicemonitor_enable:=false}
          additionalLabels: 
            release: "prometheus"
      podAnnotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"

    defaultBackend:
      enabled: true